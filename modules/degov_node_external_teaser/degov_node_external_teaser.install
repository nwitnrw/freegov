<?php

/**
 * @file
 * Install, update and uninstall hooks for the degov_node_external_teaser module.
 */

use Drupal\degov_common\Common;
use Drupal\field\Entity\FieldStorageConfig;
use Drupal\Core\Database\Database;
use Drupal\Core\Utility\UpdateException;

/**
 * deGov Update 5.1.0 - Update the Preview view mode.
 */
function degov_node_external_teaser_update_850100() {
  \Drupal::service('degov_config.module_updater')
    ->applyUpdates('degov_node_external_teaser', '8001');
}

/**
 * Implements hook_uninstall().
 */
function degov_node_external_teaser_uninstall() {
  Common::removeContent([
    'entity_type'    => 'node',
    'entity_bundles' => ['external_teaser'],
  ]);
}

/**
 * Add field field_tags to external_teaser
 * Add field_tags input field to form view
 * Add field tags to view display
 */
function degov_node_external_teaser_update_870600() {
  // Add field field_tags to external_teaser.
  \Drupal::service('degov_config.module_updater')
    ->applyUpdates('degov_node_external_teaser', '870600');

  // Add field_tags input field to form view.
  $configFactory = \Drupal::service('config.factory');
  $config = $configFactory->getEditable('core.entity_form_display.node.external_teaser.default');
  $config->set('content.field_tags.type', 'entity_reference_autocomplete');
  $config->set('content.field_tags.weight', '13');
  $config->set('content.field_tags.region', 'content');
  $config->set('content.field_tags.settings.match_operator', 'CONTAINS');
  $config->set('content.field_tags.settings.size', '60');
  $config->set('content.field_tags.settings.placeholder', '');
  $config->set('content.field_tags.third_party_settings', []);
  $config->save();

  // Add field tags to view display.
  $config = $configFactory->getEditable('core.entity_view_display.node.external_teaser.default');
  $config->set('content.field_tags.weight', '3');
  $config->set('content.field_tags.label', 'above');
  $config->set('content.field_tags.settings.link', 'true');
  $config->set('content.field_tags.third_party_settings', []);
  $config->set('content.field_tags.type', 'entity_reference_label');
  $config->set('content.field_tags.region', 'content');
  $config->save();
}

/**
 * Change cardinality for field_link.
 * field_link in external_teaser with delta > 0 will be removed.
 */
function degov_node_external_teaser_update_8820009() {
  $database = \Drupal::database();
  $field = 'field_link';
  $bundle = 'external_teaser';
  $tables = [
    'node__' . $field,
    'node_revision__' . $field,
  ];
  $dbOptions = ['return' => Database::RETURN_AFFECTED];

  foreach ($tables as $i => $name) {
    $totalCount = $database->query(
      "SELECT * FROM $name", [], $dbOptions
    );

    $removeCount = $database->query(
      "SELECT * FROM $name WHERE bundle = :bundle AND delta > :delta", [
        ':bundle' => $bundle,
        ':delta' => '0',
      ], $dbOptions);

    $tempName = $name . '_tmp_update_' . preg_replace('/[^0-9]/', '', __FUNCTION__);
    $tables[$name] = (object) [
      'name' => $name,
      'tempName' => $tempName,
      'total' => $totalCount,
      'remove' => $removeCount,
    ];
    unset($tables[$i]);
  }

  foreach ($tables as $t) {
    // Sanity check.
    // Skip update if this field has data from unknown node types
    //
    // Skipping "reduce number of allowed links from n to 1" can be ok.
    // Disadvantage:
    // Multi-value field in Backend, but only value 0 is used in frontend.
    //
    $otherBundles = $database->query(
      "SELECT * FROM $t->name WHERE bundle != :bundle", [
        ':bundle' => $bundle,
      ], $dbOptions);
    if ($otherBundles > 0) {
      \Drupal::logger('degov_node_external_teaser')->warning('Skipping cardinality update');
      return t('Skipping cardinality update. Field @field is attached to other nodes. Expected only @bundle', [
        '@field' => $field,
        '@bundle' => $bundle,
      ]);
    }

    // Create a full copy of source tables.
    $database->query("CREATE TABLE $t->tempName LIKE $t->name");
    $database->query("INSERT INTO $t->tempName SELECT * FROM $t->name");
    $database->truncate($t->name)->execute();
  }

  // Update field storage configuration.
  FieldStorageConfig::loadByName('node', 'field_link')
    ->setCardinality('1')->save();
  \Drupal::logger('degov_node_external_teaser')->notice(
    'Reduced ' . $field . ' cardinality to 1 in ' . $t->name
  );

  // Copy back everything expect external_teaser with delta > 0.
  foreach ($tables as $t) {
    $affectedRows = $database->query(
      "INSERT INTO $t->name SELECT * FROM $t->tempName WHERE bundle != :bundle OR ( bundle = :bundle AND delta = :delta )", [
        ':bundle' => $bundle,
        ':delta' => 0
      ], $dbOptions);

    if ($affectedRows === ($t->total - $t->remove)) {
      $database->query("DROP TABLE $t->tempName");
      \Drupal::logger('degov_node_external_teaser')->notice(
        'Deleted ' . $t->remove . ' items in ' . $field . ' with delta > 0 in'
         . $t->name
      );
    }
    else {
      throw new UpdateException('Could not restore data after cardinality change in table ' . $t->tempName . '. Origial data is backed up in ' . $t->tempName);
    }
  }
}

/**
 * deGov Update 8.2.0
 */
function degov_node_external_teaser_update_880200() {
  /** @var \Drupal\Core\Config\ConfigFactoryInterface $configFactory */
  $configFactory = \Drupal::service('config.factory');
  $config = $configFactory->getEditable('core.entity_view_display.node.external_teaser.default');
  if (!$config->isNew()) {
    if ($config->get('content.field_teaser_image.type') === 'entity_reference_label') {
      $config->set('content.field_teaser_image.type', 'entity_reference_entity_view');
      $config->set('content.field_teaser_image.settings', ['link' => FALSE, 'view_mode' => 'slider_main_16_9']);
      $config->save(TRUE);
    }
  }
}
