<?php

/**
 * @file
 * Contains install and update routines for Lightning Media.
 */

use Drupal\embed\Entity\EmbedButton;
use Drupal\file\Entity\File;

/**
 * Implements hook_install().
 */
function lightning_media_install() {
  // Don't do anything during config sync.
  if (\Drupal::isConfigSyncing()) {
    return;
  }

  user_role_grant_permissions('anonymous', ['view media']);
  user_role_grant_permissions('authenticated', ['view media']);

  $icon = \Drupal::moduleHandler()->getModule('lightning_media')->getPath() . '/images/star.png';
  $fs = \Drupal::service('file_system');
  $destination = $fs->copy($icon, 'public://' . $fs->basename($icon));
  if ($destination) {
    $file = File::create(['uri' => $destination]);
    $file->save();
    EmbedButton::load('media_browser')
      ->set('icon_uuid', $file->uuid())
      ->save();
  }

  // Grant the creator content role permission to use the rich_text format and
  // the media browser.
  if (\Drupal::moduleHandler()->moduleExists('lightning_roles')) {
    lightning_media_modules_installed(['lightning_roles']);
  }

  // Add the media.embedded view mode to the media_browser embed button. It
  // cannot be part of the original embed button config entity because the view
  // mode is itself installed at the same time as the button, as part of this
  // module's default configuration -- which means that it might not exist when
  // the button is installed, resulting in a scary PluginNotFoundException.
  $button = EmbedButton::load('media_browser');
  if ($button) {
    // During installation, the media.embedded view mode may have just been
    // created as part of this module's default configuration. So we need to
    // clear Entity Embed's display plugin definition cache to ensure that it
    // picks up the new view mode's corresponding display plugin.
    \Drupal::service('plugin.manager.entity_embed.display')->clearCachedDefinitions();
    $type_settings = $button->getTypeSettings();
    $type_settings['display_plugins'][] = 'view_mode:media.embedded';
    $button->set('type_settings', $type_settings);
    $button->save();
  }
}

/**
 * Implements hook_update_last_removed().
 */
function lightning_media_update_last_removed() {
  return 862000;
}
