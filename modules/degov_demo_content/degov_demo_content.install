<?php

/**
 * @file
 * Install, update and uninstall hooks for the degov_demo_content module.
 */

use Drupal\degov_demo_content\Generator\ContentGenerator;
use Drupal\taxonomy\Entity\Term;
use Drupal\Core\File\FileSystemInterface;

/**
 * Implements hook_install().
 */
function degov_demo_content_install() {
  $files_save_path = ContentGenerator::DEGOV_DEMO_CONTENT_FILES_SAVE_PATH;
  \Drupal::service('file_system')->prepareDirectory($files_save_path, FileSystemInterface::CREATE_DIRECTORY);
  $tag_term = Term::create([
    'name' => DEGOV_DEMO_CONTENT_TAG_NAME,
    'vid'  => DEGOV_DEMO_CONTENT_TAGS_VOCABULARY_NAME,
  ]);
  $tag_term->save();
  $copyright_term = Term::create([
    'name' => DEGOV_DEMO_CONTENT_TAG_NAME,
    'vid'  => DEGOV_DEMO_CONTENT_COPYRIGHT_VOCABULARY_NAME,
  ]);
  $copyright_term->save();

  if (\Drupal::service('module_handler')->moduleExists('degov_taxonomy_term_synonyms')) {
    $synonym_term = Term::create([
      'name' => DEGOV_DEMO_CONTENT_TAG_SYNONYM_NAME,
      'vid' => DEGOV_DEMO_CONTENT_TAG_SYNONYM_VOCABULARY_NAME,
    ]);
    $synonym_term->save();
    $tag_term->field_synonyms->target_id = $synonym_term->id();
    $tag_term->save();
  }

  \Drupal::service('degov_demo_content.media_generator')->generateContent();
  \Drupal::service('degov_demo_content.node_generator')->generateContent();
  \Drupal::service('degov_demo_content.menu_item_generator')->generateContent();
  \Drupal::service('degov_demo_content.block_content_generator')->generateContent();
}

/**
 * Implements hook_uninstall().
 */
function degov_demo_content_uninstall() {
  \Drupal::service('degov_demo_content.node_generator')->deleteContent();
  \Drupal::service('degov_demo_content.media_generator')->deleteContent();
  \Drupal::service('degov_demo_content.menu_item_generator')->deleteContent();
  \Drupal::service('degov_demo_content.block_content_generator')->deleteContent();

  /** @var \Drupal\Core\Config\ConfigFactoryInterface $configFactory */
  $configFactory = Drupal::configFactory();

  $configsToDelete = [
    'field.field.block_content.basic.field_content_paragraphs',
    'field.storage.block_content.field_content_paragraphs',
    'block.block.headertopmenu',
    'block.block.socialmediasettingsblock_2',
  ];
  foreach ($configsToDelete as $configName) {
    $config = $configFactory->getEditable($configName);
    $config->delete();
  }
  $terms = \Drupal::entityTypeManager()
    ->getStorage('taxonomy_term')
    ->loadByProperties([
      'name' => DEGOV_DEMO_CONTENT_TAG_NAME,
    ]);

  if (\Drupal::service('module_handler')->moduleExists('degov_taxonomy_term_synonyms')) {
    $synonym = \Drupal::entityTypeManager()
      ->getStorage('taxonomy_term')
      ->loadByProperties([
        'name' => DEGOV_DEMO_CONTENT_TAG_SYNONYM_NAME,
      ]);

    $terms = array_merge($terms, $synonym);
  }

  foreach ($terms as $term) {
    $term->delete();
  }
  /** @var \Drupal\Core\File\FileSystemInterface $filesystem */
  $filesystem = \Drupal::service('file_system');
  $filesystem->deleteRecursive($filesystem->realpath(ContentGenerator::DEGOV_DEMO_CONTENT_FILES_SAVE_PATH));
}
