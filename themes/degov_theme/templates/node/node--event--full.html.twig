{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @ingroup templates
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{%
  set classes = [
    'default-mode',
    node.bundle|clean_class,
    node.isPromoted() ? 'is-promoted',
    node.isSticky() ? 'is-sticky',
    not node.isPublished() ? 'is-unpublished',
    view_mode ? view_mode|clean_class,
    'clearfix',
    'node',
  ]
%}

<article{{ attributes.addClass(classes)|without('role') }}>
  {{ title_suffix }}


  {% if node.field_header_paragraphs.value %}
    <div class="event__header-paragraphs">
      {{ content.field_header_paragraphs }}
    </div>
    {% if not is_front %}
      <div class="content-header__text">
        <h2>{{ label }}</h2>
        {% if content.field_teaser_sub_title %}
          <h3 class="normal-page__teaser-sub-title"{{ content.field_teaser_sub_title|quickedit_attr }}>
            {{ content.field_teaser_sub_title|field_value }}
          </h3>
        {% endif %}
        {% if content.field_teaser_text %}
          <div class="normal-page__teaser-text"{{ content.field_teaser_text|quickedit_attr }}>
            {{ content.field_teaser_text|field_value }}
          </div>
        {% endif %}
      </div>
    {% endif %}
  {% endif %}
  {% if node.field_event_date.value or node.field_event_location.value %}
    <div class="event__address container">
      {% if start_date_timestamp %}
        <div class="event__address__date row">
          <span class="field-label col-xs-4 col-sm-2">{{ 'Wann'|trans }}:</span>
          <span class="content col-xs-8 col-sm-10">
            {% if "now"|date('U') >= start_date_timestamp and "now"|date('U') <= end_date_timestamp %}{{ 'Heute'|trans }}, {% endif %}
            {{ start_date_timestamp|format_date('custom', 'j. F Y') }}
            {# If event is more than 24 hours display bis date #}
            {% if end_date_timestamp and end_date_timestamp - start_date_timestamp > 86400 %} bis {{ end_date_timestamp|format_date('custom', 'j. F Y')  }} {% endif %}
          </span>
        </div>
      {% endif %}
      {% if node.field_event_location.value %}
        <div class="event__address__location row">
          <span class="field-label col-xs-4 col-sm-2">{{ 'Wo'|trans }}:</span>
          <span class="content col-xs-8 col-sm-10">
          {% if content.field_event_location.0.organization|render|striptags|trim is not empty %}
            {% set  comma = "class=comma"  %}
            <span {{ comma }}>{{ content.field_event_location.0.organization|render|striptags }}</span>
          {% endif %}
          {% if content.field_event_location.0.address_line1|render|striptags|trim is not empty %}
            {% set  comma2 = "class=comma"  %}
            <span {{ comma2 }}>{{ content.field_event_location.0.address_line1|render|striptags }}</span>
          {% endif %}
          {% if content.field_event_location.0.address_line2|render|striptags|trim is not empty %}
              {% set  comma3 = "class=comma"  %}
            <span {{ comma3 }}>{{ content.field_event_location.0.address_line2|render|striptags }}</span>
          {% endif %}
            {{ content.field_event_location.0.postal_code }}
            {{ content.field_event_location.0.locality }}
            {#<span>{{ content.field_event_location.0.country }} </span>#}
          </span>
        </div>
      {% endif %}
      {% if start_date_timestamp and end_date_timestamp and node.field_event_display_time.value == true %}
        <div class="event__address__time row">
          <span class="field-label col-xs-4 col-sm-2">{{ 'Uhr'|trans }}:</span>
          <span class="content col-xs-8 col-sm-10">{{ start_date_timestamp|format_date('custom', 'H:i') }}  bis {{ end_date_timestamp|format_date('custom', 'H:i') }} </span>
        </div>
      {% endif %}
    </div>
  {% endif %}

  <div class="event__header header container">

    {# Tags #}
    {% if content.field_tags|field_value %}
      <div class="tags">
        {{ content.field_tags }}
      </div>
    {% endif %}

    {# Social media sharing #}
    {% if node.field_social_media and node.field_social_media.value == '1' %}
      {% if content.shariff_field %}
        <div class="sharing">
          {{ content.shariff_field }}
        </div>
      {% endif %}
    {% endif %}
  </div>

  <div class="event__content content">
    {% if node.field_content_paragraphs.value %}
      <div class="event__content-paragraphs">
        {{ content.field_content_paragraphs|field_value }}
      </div>
    {% endif %}

    {% if node.field_sidebar_right_paragraphs.value %}
      {{ content.field_sidebar_right_paragraphs|field_value }}
    {% endif %}
  </div>

</article>
